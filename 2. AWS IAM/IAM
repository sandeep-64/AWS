Q: What percentage of confirmed data breaches are caused by weak, stolen, or default passwords according to the Verizon study mentioned?
A: According to the study, 63% of confirmed data breaches are due to either weak, stolen, or default passwords.
Example: Using common passwords like "123456" or "password" would make an account vulnerable to such breaches.

Q: What is the common saying in the cybersecurity world mentioned in the notes?
A: "No matter how good your chain is it's only as strong as your weakest link."
Example: Even if an organization has strong firewalls and security systems, one employee using a weak password could compromise the entire system.

Q: How do hackers typically infiltrate an organization according to the notes?
A: Hackers usually use phishing attacks to infiltrate an organization, and if they get at least one person to fall for it, they can use the stolen credentials to plant back doors, install malware, or exfiltrate confidential data.
Example: A hacker might send an email pretending to be IT support asking employees to "verify" their login credentials.

Q: What does AWS IAM allow you to do?
A: AWS IAM allows you to maintain fine-grained permissions to the AWS account and services provided by Amazon Cloud. You can manage permissions for individual users or manage permissions for certain users as groups, and roles help you manage permissions to resources.
Example: You can create a group called "Developers" with specific permissions to access EC2 and S3, then add all development team members to this group.

Q: What is Identity and Access Management (IAM)?
A: IAM is a combination of policies and technologies that allows organizations to identify users and provide the right form of access as and when required.
Example: A new employee joining the IT department can be given specific access to only the systems and resources needed for their role.

Q: Does IAM provide any replica or backup?
A: No, IAM doesn't provide any replica or backup.

Q: Is AWS IAM a regional or global service?
A: AWS IAM is a global service.
Example: An IAM user created in one region can access AWS resources in any other region without additional configuration.

Q: What are the main purposes of IAM mentioned in the notes?
A: IAM can be used to:
- Control individual and group access for AWS resources
- Manage permissions to workforce and systems to ensure least-privilege permissions
Example: A database administrator might be given full access to RDS services but read-only access to EC2 instances, following the least-privilege principle.

Q: What are the main components of Identity and Access Management (IAM)?
A: The main components of IAM are:
- Users
- Roles
- Groups
- Policies
Example: Just like in a company organization structure, where you have employees (Users), departments (Groups), job positions (Roles), and company rules (Policies).

Q: What is a Root User in IAM?
A: The root user is automatically created and granted unrestricted rights. An admin user with fewer powers can be created to control the entire Amazon account.
Example: Think of the root user as the company owner who has complete access to everything, while an admin user could be like a CEO with extensive but still limited powers.

Q: What are IAM Users?
A: IAM users are used to access the AWS Console with administrative permissions that differ from the Root user, and their login information can be tracked.
Example: If you want to give a developer access to only EC2 instances with read-only permissions, you can create an IAM user with these specific limitations.

Q: Can you explain IAM Groups with an example?
A: IAM Groups are collections of users, and a single person can be a member of several groups. For example, if user-1 needs specific permissions for auto-calling group management, and user-2 needs permissions for both auto-scaling group and EC2,S3 maintenance, they can be added to appropriate groups with the necessary permissions. New users can be added to required groups with necessary permissions.
Example: You might have a "Developers" group with EC2 and S3 access, and a "DBAdmins" group with RDS access. A full-stack developer might need to be in both groups.

Q: What are IAM Roles and how are they different from policies?
A: IAM roles are similar to IAM users but can be assumed by anyone who requires them. While policies cannot be directly given to services, roles can provide AWS Services access rights to other AWS Services. For example, Amazon EKS needs access to EC2 instances for maintaining an autoscaling group, which is achieved through roles.
Example: An EC2 instance might need a role to access S3 buckets to store log files.

Q: What are IAM Policies and how are they stored?
A: IAM Policies manage access for AWS by attaching them to IAM Identities or resources. They define permissions and validate whether requests should be allowed or denied. Policies are stored in JSON format, and multiple policies can be attached to IAM identities depending on the required permissions.
Example: A policy might look like:
```
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "s3:ListBucket",
            "Resource": "arn:aws:s3:::example-bucket"
        }
    ]
}
```

Q: Can a single user be part of multiple groups?
A: Yes, a single person can be a member of several groups.
Example: A senior developer might be part of both the "Developers" group and the "DevOps" group to access both development and deployment resources.

Q: How do IAM Policies validate requests?
A: When a user or any resource makes a request to AWS, the policies validate these requests and confirm whether the request should be allowed or denied.
Example: If a user tries to terminate an EC2 instance, IAM checks their attached policies to verify if they have the "ec2:TerminateInstances" permission before allowing or denying the action.
