Demo-1: creating and configuring a VPC with security settings in AWS:

1. VPC Creation:
   - Navigate to VPC dashboard
   - Select "VPC and more" option for automated resource creation
   - Name the VPC (demo VPC)
   - Keep default CIDR block (10.0.0.0/16 for 65,536 IPs)
   - Customize AZs (eu-north-1a)
   - Number of public subnets
   - Allow VPC endpoints for S3 Gateway
   - Create VPC (AWS automatically creates subnets, route tables, internet gateway)

2. EC2 Instance Setup:
   - Launch new EC2 instance
   - Name: demo-instance
   - Choose Ubuntu AMI with t2.micro
   - Configure network settings:
     - Click on Edit Option
     - Select custom VPC (not default)
     - Choose public subnet
     - Enable auto-assign public IP
     - Create new security group
   - Launch instance

3. Application Deployment:
   ```
    SSH into instance
   ssh -i aws_login.pem ubuntu@[public-ip]
   
    Update packages
   sudo apt update
   
    Run Python HTTP server
   python3 -m http.server 8000
   ```

4. Security Configuration Testing:
   - Initial Security Group settings:
     - Default allows only port 22 (SSH)
     - Add inbound rule for port 8000
       - Type: Custom TCP 
       - Port range: 8000
       - Source: 0.0.0.0/0 (Anywhere-IPv4)

5. NACL Configuration:
    - Navigate to VPC â†’ Network ACLs
    - Find NACL associated with demo VPC
    - View default NACL rules (allows all traffic)

    1. Default NACL Rules:
       - Rule #100: Allow all traffic (0.0.0.0/0)
       - Rule #*: Implicit deny at end

    2. To Block Port 8000:
        ```
        Rule #90: DENY
        - Port: 8000
        - Source: 0.0.0.0/0

        Rule #100: ALLOW
        - All Traffic
        - Source: 0.0.0.0/0
        ```

     Key Points:
     - Rules evaluated in order (lowest to highest number)
     - First match wins
     - Put DENY rules before ALLOW rules (lower number)
     - Implicit deny exists at end

This demonstrates how NACL rule priority affects traffic flow at subnet level.

5. Testing Access:
   - Try accessing application: http://13.51.156.183:8000
   - Test different security configurations:
     - Default security group (blocked)
     - After adding port 8000 to security group (allowed)
     - After adding NACL deny rule (blocked)
     - Test rule priority effects
